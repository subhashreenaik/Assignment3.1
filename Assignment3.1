task 1

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URISyntaxException;

import org.apache.commons.httpclient.URI;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.FSDataInputStream;
import org.apache.hadoop.fs.FileStatus;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;

public class Telivision {

	public static void main(String[] args) throws IOException, URISyntaxException {
	    Configuration conf = new Configuration();
	    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	    System.out.println("Enter the file path...");
	    String filePath = br.readLine();

	    Path path = new Path(filePath);
	    FileSystem fs = path.getFileSystem(conf);
	  
	   
	    FileStatus[] fileStatus = fs.listStatus(path);
	    for(FileStatus status : fileStatus){
	        System.out.println(status.getPath().toString());
	    }
	}
}

task 2

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.httpclient.URI;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.FSDataInputStream;
import org.apache.hadoop.fs.FileStatus;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.LocatedFileStatus;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.fs.RemoteIterator;

public class Telivision {

	public static void main(String[] args) throws IOException, URISyntaxException {
	    Configuration conf = new Configuration();
	    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	    System.out.println("Enter the file path...");
	    String filePath = br.readLine();

	    Path path = new Path(filePath);
	    FileSystem fs = path.getFileSystem(conf);
	    getAllFilePath(path,fs);
	}
	
	   
	    public static List<String> getAllFilePath(Path filePath, FileSystem fs) throws FileNotFoundException, IOException {
	        List<String> fileList = new ArrayList<String>();
	        FileStatus[] fileStatus = fs.listStatus(filePath);
	        for (FileStatus fileStat : fileStatus) {
	            if (fileStat.isDirectory()) {
	                fileList.addAll(getAllFilePath(fileStat.getPath(), fs));
	            } else {
	                fileList.add(fileStat.getPath().toString());
	            }
	        }
	        return fileList;
	    }
	    
	    
	
}

task 3

